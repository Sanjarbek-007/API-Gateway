// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: medical-record.proto

package health

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddMedicalReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RecordType  string        `protobuf:"bytes,2,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string        `protobuf:"bytes,3,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"`
	Description string        `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string        `protobuf:"bytes,5,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Attachments []*Attachment `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *AddMedicalReportReq) Reset() {
	*x = AddMedicalReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMedicalReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMedicalReportReq) ProtoMessage() {}

func (x *AddMedicalReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMedicalReportReq.ProtoReflect.Descriptor instead.
func (*AddMedicalReportReq) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{0}
}

func (x *AddMedicalReportReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddMedicalReportReq) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *AddMedicalReportReq) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *AddMedicalReportReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddMedicalReportReq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *AddMedicalReportReq) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileUrl string `protobuf:"bytes,1,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{1}
}

func (x *Attachment) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

type AddMedicalReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddMedicalReportRes) Reset() {
	*x = AddMedicalReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMedicalReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMedicalReportRes) ProtoMessage() {}

func (x *AddMedicalReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMedicalReportRes.ProtoReflect.Descriptor instead.
func (*AddMedicalReportRes) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{2}
}

func (x *AddMedicalReportRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMedicalReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *GetMedicalReportReq) Reset() {
	*x = GetMedicalReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalReportReq) ProtoMessage() {}

func (x *GetMedicalReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalReportReq.ProtoReflect.Descriptor instead.
func (*GetMedicalReportReq) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{3}
}

func (x *GetMedicalReportReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMedicalReportReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetMedicalReportReq) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type GetMedicalReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MedicalReport []*MedicalReport `protobuf:"bytes,1,rep,name=medical_report,json=medicalReport,proto3" json:"medical_report,omitempty"`
}

func (x *GetMedicalReportRes) Reset() {
	*x = GetMedicalReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalReportRes) ProtoMessage() {}

func (x *GetMedicalReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalReportRes.ProtoReflect.Descriptor instead.
func (*GetMedicalReportRes) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{4}
}

func (x *GetMedicalReportRes) GetMedicalReport() []*MedicalReport {
	if x != nil {
		return x.MedicalReport
	}
	return nil
}

type MedicalReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName   string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName    string   `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	RecordType  string   `protobuf:"bytes,4,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string   `protobuf:"bytes,5,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"`
	Description string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	DoctorName  string   `protobuf:"bytes,7,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	Attachments []string `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *MedicalReport) Reset() {
	*x = MedicalReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MedicalReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicalReport) ProtoMessage() {}

func (x *MedicalReport) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicalReport.ProtoReflect.Descriptor instead.
func (*MedicalReport) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{5}
}

func (x *MedicalReport) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MedicalReport) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *MedicalReport) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *MedicalReport) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *MedicalReport) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *MedicalReport) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MedicalReport) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *MedicalReport) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type GetMedicalReportByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
}

func (x *GetMedicalReportByIdReq) Reset() {
	*x = GetMedicalReportByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalReportByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalReportByIdReq) ProtoMessage() {}

func (x *GetMedicalReportByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalReportByIdReq.ProtoReflect.Descriptor instead.
func (*GetMedicalReportByIdReq) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{6}
}

func (x *GetMedicalReportByIdReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetMedicalReportByIdReq) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetMedicalReportByIdReq) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

type GetMedicalReportByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      string        `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email       string        `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	RecordType  string        `protobuf:"bytes,6,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	RecordDate  string        `protobuf:"bytes,7,opt,name=record_date,json=recordDate,proto3" json:"record_date,omitempty"`
	Description string        `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string        `protobuf:"bytes,9,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	DoctorName  string        `protobuf:"bytes,10,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	Attachments []*Attachment `protobuf:"bytes,11,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *GetMedicalReportByIdRes) Reset() {
	*x = GetMedicalReportByIdRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMedicalReportByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMedicalReportByIdRes) ProtoMessage() {}

func (x *GetMedicalReportByIdRes) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMedicalReportByIdRes.ProtoReflect.Descriptor instead.
func (*GetMedicalReportByIdRes) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{7}
}

func (x *GetMedicalReportByIdRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetRecordDate() string {
	if x != nil {
		return x.RecordDate
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *GetMedicalReportByIdRes) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type UpdateMedicalReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RecordType  string        `protobuf:"bytes,2,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	Description string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DoctorId    string        `protobuf:"bytes,4,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Attachments []*Attachment `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *UpdateMedicalReportReq) Reset() {
	*x = UpdateMedicalReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMedicalReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMedicalReportReq) ProtoMessage() {}

func (x *UpdateMedicalReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMedicalReportReq.ProtoReflect.Descriptor instead.
func (*UpdateMedicalReportReq) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateMedicalReportReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMedicalReportReq) GetRecordType() string {
	if x != nil {
		return x.RecordType
	}
	return ""
}

func (x *UpdateMedicalReportReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateMedicalReportReq) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *UpdateMedicalReportReq) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type UpdateMedicalReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message bool `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateMedicalReportRes) Reset() {
	*x = UpdateMedicalReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMedicalReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMedicalReportRes) ProtoMessage() {}

func (x *UpdateMedicalReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMedicalReportRes.ProtoReflect.Descriptor instead.
func (*UpdateMedicalReportRes) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateMedicalReportRes) GetMessage() bool {
	if x != nil {
		return x.Message
	}
	return false
}

type DeleteMedicalReportReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMedicalReportReq) Reset() {
	*x = DeleteMedicalReportReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMedicalReportReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMedicalReportReq) ProtoMessage() {}

func (x *DeleteMedicalReportReq) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMedicalReportReq.ProtoReflect.Descriptor instead.
func (*DeleteMedicalReportReq) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteMedicalReportReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteMedicalReportRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message bool `protobuf:"varint,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteMedicalReportRes) Reset() {
	*x = DeleteMedicalReportRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_medical_record_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMedicalReportRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMedicalReportRes) ProtoMessage() {}

func (x *DeleteMedicalReportRes) ProtoReflect() protoreflect.Message {
	mi := &file_medical_record_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMedicalReportRes.ProtoReflect.Descriptor instead.
func (*DeleteMedicalReportRes) Descriptor() ([]byte, []int) {
	return file_medical_record_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMedicalReportRes) GetMessage() bool {
	if x != nil {
		return x.Message
	}
	return false
}

var File_medical_record_proto protoreflect.FileDescriptor

var file_medical_record_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x22,
	0xe6, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x27, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72,
	0x6c, 0x22, 0x2f, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x6a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x54,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0d, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x22, 0x82, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xb1, 0x02, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xbf, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xbd, 0x03, 0x0a, 0x0d, 0x4d, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x4e, 0x0a, 0x10, 0x41, 0x64,
	0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69,
	0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x6d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x14, 0x47, 0x65,
	0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12,
	0x57, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x63, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_medical_record_proto_rawDescOnce sync.Once
	file_medical_record_proto_rawDescData = file_medical_record_proto_rawDesc
)

func file_medical_record_proto_rawDescGZIP() []byte {
	file_medical_record_proto_rawDescOnce.Do(func() {
		file_medical_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_medical_record_proto_rawDescData)
	})
	return file_medical_record_proto_rawDescData
}

var file_medical_record_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_medical_record_proto_goTypes = []any{
	(*AddMedicalReportReq)(nil),     // 0: medical.AddMedicalReportReq
	(*Attachment)(nil),              // 1: medical.Attachment
	(*AddMedicalReportRes)(nil),     // 2: medical.AddMedicalReportRes
	(*GetMedicalReportReq)(nil),     // 3: medical.GetMedicalReportReq
	(*GetMedicalReportRes)(nil),     // 4: medical.GetMedicalReportRes
	(*MedicalReport)(nil),           // 5: medical.MedicalReport
	(*GetMedicalReportByIdReq)(nil), // 6: medical.GetMedicalReportByIdReq
	(*GetMedicalReportByIdRes)(nil), // 7: medical.GetMedicalReportByIdRes
	(*UpdateMedicalReportReq)(nil),  // 8: medical.UpdateMedicalReportReq
	(*UpdateMedicalReportRes)(nil),  // 9: medical.UpdateMedicalReportRes
	(*DeleteMedicalReportReq)(nil),  // 10: medical.DeleteMedicalReportReq
	(*DeleteMedicalReportRes)(nil),  // 11: medical.DeleteMedicalReportRes
}
var file_medical_record_proto_depIdxs = []int32{
	1,  // 0: medical.AddMedicalReportReq.attachments:type_name -> medical.Attachment
	5,  // 1: medical.GetMedicalReportRes.medical_report:type_name -> medical.MedicalReport
	1,  // 2: medical.GetMedicalReportByIdRes.attachments:type_name -> medical.Attachment
	1,  // 3: medical.UpdateMedicalReportReq.attachments:type_name -> medical.Attachment
	0,  // 4: medical.MedicalRecord.AddMedicalReport:input_type -> medical.AddMedicalReportReq
	3,  // 5: medical.MedicalRecord.GetMedicalReport:input_type -> medical.GetMedicalReportReq
	6,  // 6: medical.MedicalRecord.GetMedicalReportById:input_type -> medical.GetMedicalReportByIdReq
	8,  // 7: medical.MedicalRecord.UpdateMedicalReport:input_type -> medical.UpdateMedicalReportReq
	10, // 8: medical.MedicalRecord.DeleteMedicalReport:input_type -> medical.DeleteMedicalReportReq
	2,  // 9: medical.MedicalRecord.AddMedicalReport:output_type -> medical.AddMedicalReportRes
	4,  // 10: medical.MedicalRecord.GetMedicalReport:output_type -> medical.GetMedicalReportRes
	7,  // 11: medical.MedicalRecord.GetMedicalReportById:output_type -> medical.GetMedicalReportByIdRes
	9,  // 12: medical.MedicalRecord.UpdateMedicalReport:output_type -> medical.UpdateMedicalReportRes
	11, // 13: medical.MedicalRecord.DeleteMedicalReport:output_type -> medical.DeleteMedicalReportRes
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_medical_record_proto_init() }
func file_medical_record_proto_init() {
	if File_medical_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_medical_record_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddMedicalReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddMedicalReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*MedicalReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalReportByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetMedicalReportByIdRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMedicalReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateMedicalReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMedicalReportReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_medical_record_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteMedicalReportRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_medical_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_medical_record_proto_goTypes,
		DependencyIndexes: file_medical_record_proto_depIdxs,
		MessageInfos:      file_medical_record_proto_msgTypes,
	}.Build()
	File_medical_record_proto = out.File
	file_medical_record_proto_rawDesc = nil
	file_medical_record_proto_goTypes = nil
	file_medical_record_proto_depIdxs = nil
}
