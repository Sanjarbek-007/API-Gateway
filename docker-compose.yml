version: '3.9'

services:
  db:
    image: postgres
    container_name: postgres_container
    environment:
      - POSTGRES_USER=macbookpro
      - POSTGRES_PASSWORD=1111   
      - POSTGRES_DB=casbin
    networks:
      - health
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - health

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    networks:
      - health
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  api-services:
    container_name: api-gateway
    build: .
    depends_on:
      db:
        condition: service_started
    networks:
      - health
    ports:
      - "8080:8080"

networks:
  health:
    name: health
    driver: bridge
    external: true

volumes:
  db-data:
